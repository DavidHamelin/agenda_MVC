@using PagedList;
@using PagedList.Mvc;

@model IPagedList<Agenda.Models.customers>

@*@model IEnumerable<Agenda.Models.customers>*@
@{
    ViewBag.Title = "ListCustomers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Liste des Clients</h2>
@Html.ActionLink("Ajouter un Client", "AddCustomer", "Customers", new { area = "" }, new { @class = "btn btn-default" })
<form method="get" action="#" id="searchBar" name="searchBar">
    <input type="text" id="search" name="search" value="" @*onkeyup="pickSearching()"*@ autofocus/>
    @*<input type="text" id="result" name="result" value=""/>*@
    @*@Html.TextBox("search", null, new { @id = "search"})*@ <input type="submit" name="submit" id="submit" value="Rechercher" />
    <fieldset>
        <label>Trier par :</label>
        @Html.RadioButton("option", "Nom", new { @checked = "checked" }) <text>Nom</text>
        @Html.RadioButton("option", "Prenom") <text>Prénom</text>
        @Html.RadioButton("option", "Sujet") <text>Sujet</text>
    </fieldset>
</form>

<table class="table tabCustomer">
    <tr>
        <th>
            @Html.ActionLink("Nom", "ListCustomers", new { sort = ViewBag.SortByName,
           option = Request.QueryString["option"],
           search = Request.QueryString["search"] }, new { @title = "Cliquez pour trier"}) *
        </th>
        <th>
            @Html.ActionLink("Prenom", "ListCustomers", new { sort = ViewBag.SortByFirstName,
           option = Request.QueryString["option"],
           search = Request.QueryString["search"] }, new { @title = "Cliquez pour trier" }) *
        </th>
        <th>Adresse Mail</th>
        <th>Numéro de Téléphone</th>
        <th>Budget</th>
        <th>Sujet</th>
        <th></th>
        <th></th>
    </tr>
    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="8" class="text-danger"> Oups... Aucun élément ne correspond à cette recherche ! </td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
            <tr class="tableFilter">
                <td> @Html.DisplayFor(modelItem => item.lastname) </td>
                <td> @Html.DisplayFor(modelItem => item.firstname) </td>
                <td> @Html.DisplayFor(modelItem => item.mail) </td>
                <td> @Html.DisplayFor(modelItem => item.phoneNumber) </td>
                <td> @Html.DisplayFor(modelItem => item.budget) </td>
                <td> @Html.DisplayFor(modelItem => item.subject) </td>
                <td> @Html.ActionLink("Profil", "profilCustomer", new { id = item.idCustomer }, new { @class = "btn btn-default" }) </td>
                <td>
                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#@item.idCustomer">
                        X
                    </button>
                </td>
            </tr>}
    }
</table>
<!--Autre façon de supprimer avec script : onclick = "return confirm('Etes vous sûr de vouloir supprimer ?')"-->
<!-- Modal -->
@foreach (var item in Model)
{
    <div class="modal fade" id="@item.idCustomer" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Supprimer un client</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body text-danger h4">
                    ATTENTION !<br />
                    Êtes-vous sûr(e) de vouloir supprimer définitivement ce client ?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                    @Html.ActionLink("Supprimer", "DeleteCustomerConfirm", new { id = item.idCustomer }, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
    </div>}


@Html.PagedListPager(Model, pageNumber => Url.Action("ListCustomers",new{ pageNumber,
    option = Request.QueryString["option"],
    search = Request.QueryString["search"],
    sort = Request.QueryString["sort"]
}))